void _GLOBAL__sub_I_main ()
{
  <bb 2> :
  __static_initialization_and_destruction_0 (1, 65535);
  return;

}


void __static_initialization_and_destruction_0 (int __initialize_p, int __priority)
{
  <bb 2> :
  if (__initialize_p_2(D) == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  if (__priority_4(D) == 65535)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::ios_base::Init::Init (&__ioinit);
  __cxxabiv1::__cxa_atexit (__dt_comp , &__ioinit, &__dso_handle);

  <bb 5> :
  return;

}


int * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int> (const int * __first, const int * __last, int * __result)
{
  const ptrdiff_t _Num;
  long int _1;
  long unsigned int _Num.15_2;
  long unsigned int _3;
  long unsigned int _Num.16_4;
  long unsigned int _5;
  int * _13;

  <bb 2> :
  _1 = __last_7(D) - __first_8(D);
  _Num_9 = _1 /[ex] 4;
  if (_Num_9 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.15_2 = (long unsigned int) _Num_9;
  _3 = _Num.15_2 * 4;
  __builtin_memmove (__result_11(D), __first_8(D), _3);

  <bb 4> :
  _Num.16_4 = (long unsigned int) _Num_9;
  _5 = _Num.16_4 * 4;
  _13 = __result_11(D) + _5;
  return _13;

}


int * std::__copy_move_a2<false, const int*, int*> (const int * __first, const int * __last, int * __result)
{
  int * _6;

  <bb 2> :
  _6 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int> (__first_2(D), __last_3(D), __result_4(D));
  return _6;

}


const int * const & __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::base (const struct __normal_iterator * const this)
{
  const int * const & _2;

  <bb 2> :
  _2 = &this_1(D)->_M_current;
  return _2;

}


int * std::__niter_wrap<int*> (int * const & D.233103, int * __res)
{
  int * _2;

  <bb 2> :
  _2 = __res_1(D);
  return _2;

}


int * std::__copy_move_a1<false, const int*, int*> (const int * __first, const int * __last, int * __result)
{
  int * _6;
  int * _7;

  <bb 2> :
  _6 = std::__copy_move_a2<false, const int*, int*> (__first_2(D), __last_3(D), __result_4(D));
  _7 = _6;
  return _7;

}


int * std::__niter_base<int*> (int * __it)
{
  int * _2;

  <bb 2> :
  _2 = __it_1(D);
  return _2;

}


const int * std::__niter_base<const int*, std::vector<int> > (struct __normal_iterator __it)
{
  const int * const & _1;
  const int * _4;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::base (&__it);
  _4 = *_1;
  return _4;

}


int * std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (struct __normal_iterator __first, struct __normal_iterator __last, int * __result)
{
  int * __result.14_1;
  int * _2;
  const int * _3;
  const int * _4;
  int * _5;
  int * _11;
  int * _13;

  <bb 2> :
  __result.14_1 = __result;
  _2 = std::__niter_base<int*> (__result.14_1);
  _3 = std::__niter_base<const int*, std::vector<int> > (__last);
  _4 = std::__niter_base<const int*, std::vector<int> > (__first);
  _11 = std::__copy_move_a1<false, const int*, int*> (_4, _3, _2);
  _5 = _11;
  _13 = std::__niter_wrap<int*> (&__result, _5);
  return _13;

}


struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.233869;

  <bb 2> :
  D.233869 = __it;
  return D.233869;

}


int * std::copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (struct __normal_iterator __first, struct __normal_iterator __last, int * __result)
{
  struct __normal_iterator D.233866;
  struct __normal_iterator D.233865;
  int * _6;
  int * _7;

  <bb 2> :
  D.233865 = std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (__last);
  D.233866 = std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (__first);
  _6 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (D.233866, D.233865, __result_4(D));
  _7 = _6;
  return _7;

}


int * std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (struct __normal_iterator __first, struct __normal_iterator __last, int * __result)
{
  int * _4;
  int * _5;

  <bb 2> :
  _4 = std::copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (__first, __last, __result_2(D));
  _5 = _4;
  return _5;

}


int * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (struct __normal_iterator __first, struct __normal_iterator __last, int * __result)
{
  const bool __assignable;
  int * _5;
  int * _6;

  <bb 2> :
  __assignable_1 = 1;
  _5 = std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (__first, __last, __result_3(D));
  _6 = _5;
  return _6;

}


void __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::__normal_iterator (struct __normal_iterator * const this, const int * const & __i)
{
  const int * _1;

  <bb 2> :
  *this_3(D) ={v} {CLOBBER};
  _1 = *__i_5(D);
  this_3(D)->_M_current = _1;
  return;

}


struct allocator_type std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  struct allocator_type & _2(D);

  <bb 2> :
  std::allocator<int>::allocator (_2(D), __rhs_3(D));
  return _2(D);

}


__type std::__fill_a1<int*, int> (int * __first, int * __last, const int & __value)
{
  const int __tmp;

  <bb 2> :
  __tmp_5 = *__value_4(D);
  goto <bb 4>; [INV]

  <bb 3> :
  *__first_1 = __tmp_5;
  __first_9 = __first_1 + 4;

  <bb 4> :
  # __first_1 = PHI <__first_6(D)(2), __first_9(3)>
  if (__first_1 != __last_7(D))
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}


int * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*, int> (struct __normal_iterator __first, struct __normal_iterator __last, int * __result, struct allocator & D.232537)
{
  int * _4;
  int * _5;

  <bb 2> :
  _4 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (__first, __last, __result_2(D));
  _5 = _4;
  return _5;

}


struct const_iterator std::vector<int>::end (const struct vector * const this)
{
  struct const_iterator D.232533;
  struct const_iterator D.233849;
  int * const * _1;

  <bb 2> :
  _1 = &this_2(D)->D.182734._M_impl.D.182080._M_finish;
  __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::__normal_iterator (&D.232533, _1);
  D.233849 = D.232533;
  D.232533 ={v} {CLOBBER};
  return D.233849;

}


struct const_iterator std::vector<int>::begin (const struct vector * const this)
{
  struct const_iterator D.232531;
  struct const_iterator D.233852;
  int * const * _1;

  <bb 2> :
  _1 = &this_2(D)->D.182734._M_impl.D.182080._M_start;
  __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::__normal_iterator (&D.232531, _1);
  D.233852 = D.232531;
  D.232531 ={v} {CLOBBER};
  return D.233852;

}


const struct _Tp_alloc_type & std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & _2;

  <bb 2> :
  _2 = &this_1(D)->_M_impl;
  return _2;

}


struct allocator __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy (const struct allocator & __a)
{
  struct allocator & _2(D);

  <bb 2> :
  *_2(D) = std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction (__a_3(D)); [return slot optimization]
  return _2(D);

}


size_type std::vector<int>::size (const struct vector * const this)
{
  int * _1;
  int * _2;
  long int _3;
  long int _4;
  size_type _7;

  <bb 2> :
  _1 = this_6(D)->D.182734._M_impl.D.182080._M_finish;
  _2 = this_6(D)->D.182734._M_impl.D.182080._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 4;
  _7 = (size_type) _4;
  return _7;

}


void std::__fill_a<int*, int> (int * __first, int * __last, const int & __value)
{
  <bb 2> :
  std::__fill_a1<int*, int> (__first_2(D), __last_3(D), __value_4(D));
  return;

}


void std::vector<int>::vector (struct vector * const this, const struct vector & __x)
{
  struct __normal_iterator D.233836;
  struct __normal_iterator D.233835;
  struct allocator D.232382;
  struct _Vector_base * _1;
  const struct _Vector_base * _2;
  const struct _Tp_alloc_type & _3;
  long unsigned int _4;
  struct _Vector_base * _5;
  struct _Tp_alloc_type & _6;
  int * _7;
  int * _8;
  int * _23;

  <bb 2> :
  *this_10(D) ={v} {CLOBBER};
  _1 = &this_10(D)->D.182734;
  _2 = &__x_12(D)->D.182734;
  _3 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_2);
  D.232382 = __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<int>::size (__x_12(D));
  std::_Vector_base<int, std::allocator<int> >::_Vector_base (_1, _4, &D.232382);

  <bb 3> :
  std::allocator<int>::~allocator (&D.232382);
  D.232382 ={v} {CLOBBER};
  _5 = &this_10(D)->D.182734;
  _6 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_5);
  _7 = this_10(D)->D.182734._M_impl.D.182080._M_start;
  D.233835 = std::vector<int>::end (__x_12(D));
  D.233836 = std::vector<int>::begin (__x_12(D));
  _23 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*, int> (D.233836, D.233835, _7, _6);
  _8 = _23;
  this_10(D)->D.182734._M_impl.D.182080._M_finish = _8;
  return;

  <bb 4> :
<L0>:
  std::allocator<int>::~allocator (&D.232382);
  resx 2

  <bb 5> :
<L1>:
  D.232382 ={v} {CLOBBER};
  resx 1

}


int * std::__fill_n_a<int*, long unsigned int, int> (int * __first, long unsigned int __n, const int & __value, struct random_access_iterator_tag D.232257)
{
  long unsigned int _1;
  int * _2;
  long unsigned int _3;
  int * _4;
  int * _11;
  int * _12;

  <bb 2> :
  if (__n_6(D) == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _12 = __first_7(D);
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _1 = __n_6(D) * 4;
  _2 = __first_7(D) + _1;
  std::__fill_a<int*, int> (__first_7(D), _2, __value_9(D));
  _3 = __n_6(D) * 4;
  _11 = __first_7(D) + _3;

  <bb 5> :
  # _4 = PHI <_12(3), _11(4)>
  return _4;

}


void std::_Construct<std::vector<int>, const std::vector<int, std::allocator<int> >&> (struct vector * __p, const struct vector & __args#0)
{
  const struct vector & _4;
  void * _6;
  void * _8;

  <bb 2> :
  _4 = std::forward<const std::vector<int>&> (__args#0_2(D));
  _6 = __p_5(D);
  _8 = operator new (24, _6);
  std::vector<int>::vector (_8, _4);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  operator delete (_8, _6);
  resx 1

}


__attribute__((nodiscard))
const struct vector & std::forward<const std::vector<int>&> (const struct type & __t)
{
  const struct vector & _2;

  <bb 2> :
  _2 = __t_1(D);
  return _2;

}


__attribute__((nodiscard))
struct vector * __gnu_cxx::new_allocator<std::vector<int> >::allocate (struct new_allocator * const this, size_type __n, const void * D.232047)
{
  long unsigned int _1;
  bool _2;
  long int _3;
  long int _4;
  long unsigned int _6;
  bool retval.13_10;
  struct vector * _12;
  struct vector * _13;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<std::vector<int> >::_M_max_size (this_7(D));
  _2 = __n_9(D) > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.13_10 = _4 != 0;
  if (retval.13_10 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n_9(D) > 768614336404564650)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n_9(D) * 24;
  _12 = operator new (_6);
  _13 = _12;
  return _13;

}


int * std::fill_n<int*, long unsigned int, int> (int * __first, long unsigned int __n, const int & __value)
{
  struct random_access_iterator_tag D.233760;
  long unsigned int _1;
  int * __first.10_2;
  int * _9;
  int * _10;

  <bb 2> :
  _1 = std::__size_to_integer (__n_4(D));
  __first.10_2 = __first_6(D);
  _9 = std::__fill_n_a<int*, long unsigned int, int> (__first.10_2, _1, __value_7(D), D.233760);
  _10 = _9;
  return _10;

}


__attribute__((nodiscard))
int * __gnu_cxx::new_allocator<int>::allocate (struct new_allocator * const this, size_type __n, const void * D.231995)
{
  long unsigned int _1;
  bool _2;
  long int _3;
  long int _4;
  long unsigned int _6;
  bool retval.9_10;
  int * _12;
  int * _13;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<int>::_M_max_size (this_7(D));
  _2 = __n_9(D) > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.9_10 = _4 != 0;
  if (retval.9_10 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n_9(D) > 4611686018427387903)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n_9(D) * 4;
  _12 = operator new (_6);
  _13 = _12;
  return _13;

}


void std::_Destroy<std::vector<int> > (struct vector * __pointer)
{
  <bb 2> :
  std::vector<int>::~vector (__pointer_2(D));
  return;

}


struct vector * std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int>*, long unsigned int, std::vector<int> > (struct vector * __first, long unsigned int __n, const struct vector & __x)
{
  struct vector * __cur;
  struct vector * _1;
  void * _2;
  struct vector * _10;

  <bb 2> :
  __cur_7 = __first_6(D);
  goto <bb 5>; [INV]

  <bb 3> :
  _1 = std::__addressof<std::vector<int> > (__cur_4);
  std::_Construct<std::vector<int>, const std::vector<int, std::allocator<int> >&> (_1, __x_12(D));

  <bb 4> :
  __n_14 = __n_3 + 18446744073709551615;
  __cur_15 = __cur_4 + 24;

  <bb 5> :
  # __n_3 = PHI <__n_8(D)(2), __n_14(4)>
  # __cur_4 = PHI <__cur_7(2), __cur_15(4)>
  if (__n_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _10 = __cur_4;
  return _10;

  <bb 7> :
<L4>:
  eh_dispatch 1

  <bb 8> :
<L5>:
  _2 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_2);
  std::_Destroy<std::vector<int>*> (__first_6(D), __cur_4);
  __cxa_rethrow ();

  <bb 9> :
<L6>:
  __cxa_end_catch ();
  resx 2

}


void __gnu_cxx::new_allocator<std::vector<int> >::deallocate (struct new_allocator * const this, struct vector * __p, size_type __t)
{
  long unsigned int _2;

  <bb 2> :
  _2 = __t_1(D) * 24;
  operator delete (__p_4(D), _2);
  return;

}


__attribute__((nodiscard))
struct vector * std::allocator_traits<std::allocator<std::vector<int> > >::allocate (struct allocator_type & __a, size_type __n)
{
  struct vector * _5;
  struct vector * _6;

  <bb 2> :
  _5 = __gnu_cxx::new_allocator<std::vector<int> >::allocate (__a_2(D), __n_3(D), 0B);
  _6 = _5;
  return _6;

}


size_type __gnu_cxx::new_allocator<std::vector<int> >::max_size (const struct new_allocator * const this)
{
  size_type _4;

  <bb 2> :
  _4 = __gnu_cxx::new_allocator<std::vector<int> >::_M_max_size (this_2(D));
  return _4;

}


size_type __gnu_cxx::new_allocator<std::vector<int> >::_M_max_size (const struct new_allocator * const this)
{
  size_type _1;

  <bb 2> :
  _1 = 384307168202282325;
  return _1;

}


int * std::__uninitialized_fill_n<true>::__uninit_fill_n<int*, long unsigned int, int> (int * __first, long unsigned int __n, const int & __x)
{
  int * _6;
  int * _7;

  <bb 2> :
  _6 = std::fill_n<int*, long unsigned int, int> (__first_2(D), __n_3(D), __x_4(D));
  _7 = _6;
  return _7;

}


void __gnu_cxx::new_allocator<int>::deallocate (struct new_allocator * const this, int * __p, size_type __t)
{
  long unsigned int _2;

  <bb 2> :
  _2 = __t_1(D) * 4;
  operator delete (__p_4(D), _2);
  return;

}


__attribute__((nodiscard))
int * std::allocator_traits<std::allocator<int> >::allocate (struct allocator_type & __a, size_type __n)
{
  int * _5;
  int * _6;

  <bb 2> :
  _5 = __gnu_cxx::new_allocator<int>::allocate (__a_2(D), __n_3(D), 0B);
  _6 = _5;
  return _6;

}


size_type __gnu_cxx::new_allocator<int>::max_size (const struct new_allocator * const this)
{
  size_type _4;

  <bb 2> :
  _4 = __gnu_cxx::new_allocator<int>::_M_max_size (this_2(D));
  return _4;

}


size_type __gnu_cxx::new_allocator<int>::_M_max_size (const struct new_allocator * const this)
{
  size_type _1;

  <bb 2> :
  _1 = 2305843009213693951;
  return _1;

}


void std::_Destroy_aux<false>::__destroy<std::vector<int>*> (struct vector * __first, struct vector * __last)
{
  struct vector * _1;

  <bb 2> :
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<std::vector<int> > (__first_2);
  std::_Destroy<std::vector<int> > (_1);
  __first_9 = __first_2 + 24;

  <bb 4> :
  # __first_2 = PHI <__first_4(D)(2), __first_9(3)>
  if (__first_2 != __last_6(D))
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}


struct vector * std::__addressof<std::vector<int> > (struct vector & __r)
{
  struct vector * _2;

  <bb 2> :
  _2 = __r_1(D);
  return _2;

}


struct vector * std::uninitialized_fill_n<std::vector<int>*, long unsigned int, std::vector<int> > (struct vector * __first, long unsigned int __n, const struct vector & __x)
{
  const bool __can_fill;
  struct vector * _7;
  struct vector * _8;

  <bb 2> :
  __can_fill_1 = 1;
  _7 = std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int>*, long unsigned int, std::vector<int> > (__first_3(D), __n_4(D), __x_5(D));
  _8 = _7;
  return _8;

}


void std::allocator_traits<std::allocator<std::vector<int> > >::deallocate (struct allocator_type & __a, struct vector * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::vector<int> >::deallocate (__a_2(D), __p_3(D), __n_4(D));
  return;

}


struct vector * std::_Vector_base<std::vector<int>, std::allocator<std::vector<int> > >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct _Vector_impl * _1;
  struct vector * iftmp.12_2;
  struct vector * iftmp.12_5;
  struct vector * _9;
  struct vector * iftmp.12_10;
  struct vector * _11;

  <bb 2> :
  if (__n_4(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this_7(D)->_M_impl;
  _9 = std::allocator_traits<std::allocator<std::vector<int> > >::allocate (_1, __n_4(D));
  iftmp.12_10 = _9;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.12_5 = 0B;

  <bb 5> :
  # iftmp.12_2 = PHI <iftmp.12_10(3), iftmp.12_5(4)>
  _11 = iftmp.12_2;
  return _11;

}


void std::_Vector_base<std::vector<int>, std::allocator<std::vector<int> > >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this_2(D) ={v} {CLOBBER};
  this_2(D)->_M_start = 0B;
  this_2(D)->_M_finish = 0B;
  this_2(D)->_M_end_of_storage = 0B;
  return;

}


void __gnu_cxx::new_allocator<std::vector<int> >::new_allocator (struct new_allocator * const this, const struct new_allocator & D.212830)
{
  <bb 2> :
  return;

}


size_type std::allocator_traits<std::allocator<std::vector<int> > >::max_size (const struct allocator_type & __a)
{
  size_type _4;

  <bb 2> :
  _4 = __gnu_cxx::new_allocator<std::vector<int> >::max_size (__a_2(D));
  return _4;

}


void std::_Destroy_aux<true>::__destroy<int*> (int * D.229498, int * D.229499)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}


int * std::uninitialized_fill_n<int*, long unsigned int, int> (int * __first, long unsigned int __n, const int & __x)
{
  const bool __can_fill;
  int * _7;
  int * _8;

  <bb 2> :
  __can_fill_1 = 1;
  _7 = std::__uninitialized_fill_n<true>::__uninit_fill_n<int*, long unsigned int, int> (__first_3(D), __n_4(D), __x_5(D));
  _8 = _7;
  return _8;

}


void std::allocator_traits<std::allocator<int> >::deallocate (struct allocator_type & __a, int * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<int>::deallocate (__a_2(D), __p_3(D), __n_4(D));
  return;

}


int * std::_Vector_base<int, std::allocator<int> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct _Vector_impl * _1;
  int * iftmp.8_2;
  int * iftmp.8_5;
  int * _9;
  int * iftmp.8_10;
  int * _11;

  <bb 2> :
  if (__n_4(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this_7(D)->_M_impl;
  _9 = std::allocator_traits<std::allocator<int> >::allocate (_1, __n_4(D));
  iftmp.8_10 = _9;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.8_5 = 0B;

  <bb 5> :
  # iftmp.8_2 = PHI <iftmp.8_10(3), iftmp.8_5(4)>
  _11 = iftmp.8_2;
  return _11;

}


void std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this_2(D) ={v} {CLOBBER};
  this_2(D)->_M_start = 0B;
  this_2(D)->_M_finish = 0B;
  this_2(D)->_M_end_of_storage = 0B;
  return;

}


void __gnu_cxx::new_allocator<int>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.181781)
{
  <bb 2> :
  return;

}


size_type std::allocator_traits<std::allocator<int> >::max_size (const struct allocator_type & __a)
{
  size_type _4;

  <bb 2> :
  _4 = __gnu_cxx::new_allocator<int>::max_size (__a_2(D));
  return _4;

}


void std::_Destroy<std::vector<int>*> (struct vector * __first, struct vector * __last)
{
  <bb 2> :
  std::_Destroy_aux<false>::__destroy<std::vector<int>*> (__first_2(D), __last_3(D));
  return;

}


struct vector * std::__uninitialized_fill_n_a<std::vector<int>*, long unsigned int, std::vector<int>, std::vector<int> > (struct vector * __first, long unsigned int __n, const struct vector & __x, struct allocator & D.227701)
{
  struct vector * _6;
  struct vector * _7;

  <bb 2> :
  _6 = std::uninitialized_fill_n<std::vector<int>*, long unsigned int, std::vector<int> > (__first_2(D), __n_3(D), __x_4(D));
  _7 = _6;
  return _7;

}


void std::_Vector_base<std::vector<int>, std::allocator<std::vector<int> > >::_M_deallocate (struct _Vector_base * const this, struct vector * __p, size_t __n)
{
  struct _Vector_impl * _1;

  <bb 2> :
  if (__p_3(D) != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this_5(D)->_M_impl;
  std::allocator_traits<std::allocator<std::vector<int> > >::deallocate (_1, __p_3(D), __n_6(D));

  <bb 4> :
  return;

}


void std::_Vector_base<std::vector<int>, std::allocator<std::vector<int> > >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct vector * _1;
  struct vector * _2;
  struct vector * _3;
  long unsigned int _4;
  struct vector * _5;
  struct vector * _10;

  <bb 2> :
  _10 = std::_Vector_base<std::vector<int>, std::allocator<std::vector<int> > >::_M_allocate (this_7(D), __n_8(D));
  _1 = _10;
  this_7(D)->_M_impl.D.213129._M_start = _1;
  _2 = this_7(D)->_M_impl.D.213129._M_start;
  this_7(D)->_M_impl.D.213129._M_finish = _2;
  _3 = this_7(D)->_M_impl.D.213129._M_start;
  _4 = __n_8(D) * 24;
  _5 = _3 + _4;
  this_7(D)->_M_impl.D.213129._M_end_of_storage = _5;
  return;

}


void std::_Vector_base<std::vector<int>, std::allocator<std::vector<int> > >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  struct _Vector_impl_data * _1;

  <bb 2> :
  *this_3(D) ={v} {CLOBBER};
  std::allocator<std::vector<int> >::allocator (this_3(D), __a_5(D));
  _1 = &this_3(D)->D.213129;
  std::_Vector_base<std::vector<int>, std::allocator<std::vector<int> > >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}


void std::allocator<std::vector<int> >::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::vector<int> >::new_allocator (this_2(D), __a_3(D));
  return;

}


size_type std::vector<std::vector<int> >::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  long unsigned int _1;
  const long unsigned int & _2;
  size_type _9;

  <bb 2> :
  __diffmax = 384307168202282325;
  _1 = std::allocator_traits<std::allocator<std::vector<int> > >::max_size (__a_5(D));
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  _9 = *_2;
  __diffmax ={v} {CLOBBER};
  __allocmax ={v} {CLOBBER};
  return _9;

}


void std::_Destroy<int*> (int * __first, int * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<int*> (__first_2(D), __last_3(D));
  return;

}


int * std::__uninitialized_fill_n_a<int*, long unsigned int, int, int> (int * __first, long unsigned int __n, const int & __x, struct allocator & D.227486)
{
  int * _6;
  int * _7;

  <bb 2> :
  _6 = std::uninitialized_fill_n<int*, long unsigned int, int> (__first_2(D), __n_3(D), __x_4(D));
  _7 = _6;
  return _7;

}


void std::_Vector_base<int, std::allocator<int> >::_M_deallocate (struct _Vector_base * const this, int * __p, size_t __n)
{
  struct _Vector_impl * _1;

  <bb 2> :
  if (__p_3(D) != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this_5(D)->_M_impl;
  std::allocator_traits<std::allocator<int> >::deallocate (_1, __p_3(D), __n_6(D));

  <bb 4> :
  return;

}


void std::_Vector_base<int, std::allocator<int> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  int * _1;
  int * _2;
  int * _3;
  long unsigned int _4;
  int * _5;
  int * _10;

  <bb 2> :
  _10 = std::_Vector_base<int, std::allocator<int> >::_M_allocate (this_7(D), __n_8(D));
  _1 = _10;
  this_7(D)->_M_impl.D.182080._M_start = _1;
  _2 = this_7(D)->_M_impl.D.182080._M_start;
  this_7(D)->_M_impl.D.182080._M_finish = _2;
  _3 = this_7(D)->_M_impl.D.182080._M_start;
  _4 = __n_8(D) * 4;
  _5 = _3 + _4;
  this_7(D)->_M_impl.D.182080._M_end_of_storage = _5;
  return;

}


void std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  struct _Vector_impl_data * _1;

  <bb 2> :
  *this_3(D) ={v} {CLOBBER};
  std::allocator<int>::allocator (this_3(D), __a_5(D));
  _1 = &this_3(D)->D.182080;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}


void std::allocator<int>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<int>::new_allocator (this_2(D), __a_3(D));
  return;

}


size_type std::vector<int>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  long unsigned int _1;
  const long unsigned int & _2;
  size_type _9;

  <bb 2> :
  __diffmax = 2305843009213693951;
  _1 = std::allocator_traits<std::allocator<int> >::max_size (__a_5(D));
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  _9 = *_2;
  __diffmax ={v} {CLOBBER};
  __allocmax ={v} {CLOBBER};
  return _9;

}


void std::_Destroy<std::vector<int>*, std::vector<int> > (struct vector * __first, struct vector * __last, struct allocator & D.225819)
{
  <bb 2> :
  std::_Destroy<std::vector<int>*> (__first_2(D), __last_3(D));
  return;

}


struct _Tp_alloc_type & std::_Vector_base<std::vector<int>, std::allocator<std::vector<int> > >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & _2;

  <bb 2> :
  _2 = &this_1(D)->_M_impl;
  return _2;

}


void std::vector<std::vector<int> >::_M_fill_initialize (struct vector * const this, size_type __n, const struct value_type & __value)
{
  struct _Vector_base * _1;
  struct _Tp_alloc_type & _2;
  struct vector * _3;
  struct vector * _4;
  struct vector * _11;

  <bb 2> :
  _1 = &this_5(D)->D.213784;
  _2 = std::_Vector_base<std::vector<int>, std::allocator<std::vector<int> > >::_M_get_Tp_allocator (_1);
  _3 = this_5(D)->D.213784._M_impl.D.213129._M_start;
  _11 = std::__uninitialized_fill_n_a<std::vector<int>*, long unsigned int, std::vector<int>, std::vector<int> > (_3, __n_8(D), __value_9(D), _2);
  _4 = _11;
  this_5(D)->D.213784._M_impl.D.213129._M_finish = _4;
  return;

}


void std::_Vector_base<std::vector<int>, std::allocator<std::vector<int> > >::~_Vector_base (struct _Vector_base * const this)
{
  struct vector * _1;
  struct vector * _2;
  long int _3;
  long int _4;
  long unsigned int _5;
  struct vector * _6;
  struct _Vector_impl * _7;

  <bb 2> :
  _1 = this_9(D)->_M_impl.D.213129._M_end_of_storage;
  _2 = this_9(D)->_M_impl.D.213129._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  _5 = (long unsigned int) _4;
  _6 = this_9(D)->_M_impl.D.213129._M_start;
  std::_Vector_base<std::vector<int>, std::allocator<std::vector<int> > >::_M_deallocate (this_9(D), _6, _5);
  _7 = &this_9(D)->_M_impl;
  std::_Vector_base<std::vector<int>, std::allocator<std::vector<int> > >::_Vector_impl::~_Vector_impl (_7);
  *this_9(D) ={v} {CLOBBER};
  return;

}


void std::_Vector_base<std::vector<int>, std::allocator<std::vector<int> > >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  struct _Vector_impl * _1;
  struct _Vector_impl * _2;

  <bb 2> :
  *this_4(D) ={v} {CLOBBER};
  _1 = &this_4(D)->_M_impl;
  std::_Vector_base<std::vector<int>, std::allocator<std::vector<int> > >::_Vector_impl::_Vector_impl (_1, __a_6(D));
  std::_Vector_base<std::vector<int>, std::allocator<std::vector<int> > >::_M_create_storage (this_4(D), __n_8(D));

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this_4(D)->_M_impl;
  std::_Vector_base<std::vector<int>, std::allocator<std::vector<int> > >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}


void std::_Vector_base<std::vector<int>, std::allocator<std::vector<int> > >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<std::vector<int> >::~allocator (this_2(D));
  *this_2(D) ={v} {CLOBBER};
  return;

}


size_type std::vector<std::vector<int> >::_S_check_init_len (size_type __n, const struct allocator_type & __a)
{
  struct _Tp_alloc_type D.225783;
  long unsigned int _1;
  bool retval.11_7;
  size_type _10;

  <bb 2> :
  std::allocator<std::vector<int> >::allocator (&D.225783, __a_3(D));
  _1 = std::vector<std::vector<int> >::_S_max_size (&D.225783);
  retval.11_7 = __n_6(D) > _1;
  std::allocator<std::vector<int> >::~allocator (&D.225783);
  D.225783 ={v} {CLOBBER};
  if (retval.11_7 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error ("cannot create std::vector larger than max_size()");

  <bb 4> :
  _10 = __n_6(D);
  return _10;

}


void __gnu_cxx::new_allocator<std::vector<int> >::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}


void __gnu_cxx::new_allocator<std::vector<int> >::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}


void std::_Destroy<int*, int> (int * __first, int * __last, struct allocator & D.225765)
{
  <bb 2> :
  std::_Destroy<int*> (__first_2(D), __last_3(D));
  return;

}


struct _Tp_alloc_type & std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & _2;

  <bb 2> :
  _2 = &this_1(D)->_M_impl;
  return _2;

}


void std::vector<int>::_M_fill_initialize (struct vector * const this, size_type __n, const value_type & __value)
{
  struct _Vector_base * _1;
  struct _Tp_alloc_type & _2;
  int * _3;
  int * _4;
  int * _11;

  <bb 2> :
  _1 = &this_5(D)->D.182734;
  _2 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_1);
  _3 = this_5(D)->D.182734._M_impl.D.182080._M_start;
  _11 = std::__uninitialized_fill_n_a<int*, long unsigned int, int, int> (_3, __n_8(D), __value_9(D), _2);
  _4 = _11;
  this_5(D)->D.182734._M_impl.D.182080._M_finish = _4;
  return;

}


void std::_Vector_base<int, std::allocator<int> >::~_Vector_base (struct _Vector_base * const this)
{
  int * _1;
  int * _2;
  long int _3;
  long int _4;
  long unsigned int _5;
  int * _6;
  struct _Vector_impl * _7;

  <bb 2> :
  _1 = this_9(D)->_M_impl.D.182080._M_end_of_storage;
  _2 = this_9(D)->_M_impl.D.182080._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 4;
  _5 = (long unsigned int) _4;
  _6 = this_9(D)->_M_impl.D.182080._M_start;
  std::_Vector_base<int, std::allocator<int> >::_M_deallocate (this_9(D), _6, _5);
  _7 = &this_9(D)->_M_impl;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl (_7);
  *this_9(D) ={v} {CLOBBER};
  return;

}


void std::_Vector_base<int, std::allocator<int> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  struct _Vector_impl * _1;
  struct _Vector_impl * _2;

  <bb 2> :
  *this_4(D) ={v} {CLOBBER};
  _1 = &this_4(D)->_M_impl;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (_1, __a_6(D));
  std::_Vector_base<int, std::allocator<int> >::_M_create_storage (this_4(D), __n_8(D));

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this_4(D)->_M_impl;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}


void std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<int>::~allocator (this_2(D));
  *this_2(D) ={v} {CLOBBER};
  return;

}


size_type std::vector<int>::_S_check_init_len (size_type __n, const struct allocator_type & __a)
{
  struct _Tp_alloc_type D.225729;
  long unsigned int _1;
  bool retval.7_7;
  size_type _10;

  <bb 2> :
  std::allocator<int>::allocator (&D.225729, __a_3(D));
  _1 = std::vector<int>::_S_max_size (&D.225729);
  retval.7_7 = __n_6(D) > _1;
  std::allocator<int>::~allocator (&D.225729);
  D.225729 ={v} {CLOBBER};
  if (retval.7_7 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error ("cannot create std::vector larger than max_size()");

  <bb 4> :
  _10 = __n_6(D);
  return _10;

}


void __gnu_cxx::new_allocator<int>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}


void __gnu_cxx::new_allocator<int>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}


struct basic_ostream & std::operator<< <std::char_traits<char> > (struct basic_ostream & __out, char __c)
{
  struct basic_ostream & _4;
  struct basic_ostream & _5;

  <bb 2> :
  _4 = std::__ostream_insert<char, std::char_traits<char> > (__out_2(D), &__c, 1);
  _5 = _4;
  return _5;

}


value_type & std::vector<int>::operator[] (struct vector * const this, size_type __n)
{
  int * _1;
  long unsigned int _2;
  value_type & _6;

  <bb 2> :
  _1 = this_4(D)->D.182734._M_impl.D.182080._M_start;
  _2 = __n_5(D) * 4;
  _6 = _1 + _2;
  return _6;

}


struct value_type & std::vector<std::vector<int> >::operator[] (struct vector * const this, size_type __n)
{
  struct vector * _1;
  long unsigned int _2;
  struct value_type & _6;

  <bb 2> :
  _1 = this_4(D)->D.213784._M_impl.D.213129._M_start;
  _2 = __n_5(D) * 24;
  _6 = _1 + _2;
  return _6;

}


void std::vector<std::vector<int> >::~vector (struct vector * const this)
{
  struct _Vector_base * _1;
  struct _Tp_alloc_type & _2;
  struct vector * _3;
  struct vector * _4;
  struct _Vector_base * _5;

  <bb 2> :
  _1 = &this_6(D)->D.213784;
  _2 = std::_Vector_base<std::vector<int>, std::allocator<std::vector<int> > >::_M_get_Tp_allocator (_1);
  _3 = this_6(D)->D.213784._M_impl.D.213129._M_finish;
  _4 = this_6(D)->D.213784._M_impl.D.213129._M_start;
  std::_Destroy<std::vector<int>*, std::vector<int> > (_4, _3, _2);
  _5 = &this_6(D)->D.213784;
  std::_Vector_base<std::vector<int>, std::allocator<std::vector<int> > >::~_Vector_base (_5);
  *this_6(D) ={v} {CLOBBER};
  return;

}


void std::vector<std::vector<int> >::vector (struct vector * const this, size_type __n, const struct value_type & __value, const struct allocator_type & __a)
{
  struct _Vector_base * _1;
  long unsigned int _2;
  struct _Vector_base * _3;
  long unsigned int _10;

  <bb 2> :
  *this_5(D) ={v} {CLOBBER};
  _1 = &this_5(D)->D.213784;
  _10 = std::vector<std::vector<int> >::_S_check_init_len (__n_7(D), __a_8(D));
  _2 = _10;
  std::_Vector_base<std::vector<int>, std::allocator<std::vector<int> > >::_Vector_base (_1, _2, __a_8(D));
  std::vector<std::vector<int> >::_M_fill_initialize (this_5(D), __n_7(D), __value_12(D));

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _3 = &this_5(D)->D.213784;
  std::_Vector_base<std::vector<int>, std::allocator<std::vector<int> > >::~_Vector_base (_3);
  resx 1

}


void std::allocator<std::vector<int> >::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::vector<int> >::~new_allocator (this_2(D));
  return;

}


void std::allocator<std::vector<int> >::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::vector<int> >::new_allocator (this_2(D));
  return;

}


void std::vector<int>::~vector (struct vector * const this)
{
  struct _Vector_base * _1;
  struct _Tp_alloc_type & _2;
  int * _3;
  int * _4;
  struct _Vector_base * _5;

  <bb 2> :
  _1 = &this_6(D)->D.182734;
  _2 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_1);
  _3 = this_6(D)->D.182734._M_impl.D.182080._M_finish;
  _4 = this_6(D)->D.182734._M_impl.D.182080._M_start;
  std::_Destroy<int*, int> (_4, _3, _2);
  _5 = &this_6(D)->D.182734;
  std::_Vector_base<int, std::allocator<int> >::~_Vector_base (_5);
  *this_6(D) ={v} {CLOBBER};
  return;

}


void std::vector<int>::vector (struct vector * const this, size_type __n, const value_type & __value, const struct allocator_type & __a)
{
  struct _Vector_base * _1;
  long unsigned int _2;
  long unsigned int _9;

  <bb 2> :
  *this_4(D) ={v} {CLOBBER};
  _1 = &this_4(D)->D.182734;
  _9 = std::vector<int>::_S_check_init_len (__n_6(D), __a_7(D));
  _2 = _9;
  std::_Vector_base<int, std::allocator<int> >::_Vector_base (_1, _2, __a_7(D));
  std::vector<int>::_M_fill_initialize (this_4(D), __n_6(D), __value_11(D));
  return;

}


void std::allocator<int>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<int>::~new_allocator (this_2(D));
  return;

}


void std::allocator<int>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<int>::new_allocator (this_2(D));
  return;

}


int main ()
{
  int k;
  int k;
  int j;
  int i;
  int i;
  struct vector dp;
  int b;
  int a;
  const int D.213874;
  const int D.213872;
  const value_type D.213805;
  struct allocator_type D.213807;
  struct vector D.213808;
  struct allocator_type D.213864;
  struct __istream_type & _1;
  int b.0_2;
  int _3;
  long unsigned int _4;
  int a.1_5;
  int _6;
  long unsigned int _7;
  long unsigned int _8;
  struct value_type & _9;
  long unsigned int _10;
  value_type & _11;
  const int & _12;
  int _13;
  int _14;
  long unsigned int _15;
  struct value_type & _16;
  long unsigned int _17;
  value_type & _18;
  int _19;
  int _20;
  long unsigned int _21;
  struct value_type & _22;
  long unsigned int _23;
  value_type & _24;
  int _25;
  int _26;
  long unsigned int _27;
  struct value_type & _28;
  long unsigned int _29;
  value_type & _30;
  const int & _31;
  int _32;
  long unsigned int _33;
  struct value_type & _34;
  long unsigned int _35;
  value_type & _36;
  long unsigned int _37;
  struct value_type & _38;
  long unsigned int _39;
  value_type & _40;
  int _41;
  int _42;
  long unsigned int _43;
  struct value_type & _44;
  int _45;
  long unsigned int _46;
  value_type & _47;
  int _48;
  int _49;
  long unsigned int _50;
  struct value_type & _51;
  long unsigned int _52;
  value_type & _53;
  const int & _54;
  int _55;
  long unsigned int _56;
  struct value_type & _57;
  long unsigned int _58;
  value_type & _59;
  int b.3_60;
  int a.4_61;
  int a.5_62;
  long unsigned int _63;
  struct value_type & _64;
  int b.6_65;
  long unsigned int _66;
  value_type & _67;
  int _68;
  struct basic_ostream & _69;
  struct __istream_type & _86;
  bool retval.2_102;
  struct basic_ostream & _107;
  int _109;

  <bb 2> :
  _86 = std::basic_istream<char>::operator>> (&cin, &a);

  <bb 3> :
  _1 = _86;
  std::basic_istream<char>::operator>> (_1, &b);

  <bb 4> :
  std::allocator<std::vector<int> >::allocator (&D.213864);
  std::allocator<int>::allocator (&D.213807);
  D.213805 = 1000000000;
  b.0_2 = b;
  _3 = b.0_2 + 1;
  _4 = (long unsigned int) _3;
  std::vector<int>::vector (&D.213808, _4, &D.213805, &D.213807);

  <bb 5> :
  a.1_5 = a;
  _6 = a.1_5 + 1;
  _7 = (long unsigned int) _6;
  std::vector<std::vector<int> >::vector (&dp, _7, &D.213808, &D.213864);

  <bb 6> :
  std::vector<int>::~vector (&D.213808);
  D.213808 ={v} {CLOBBER};
  D.213805 ={v} {CLOBBER};
  std::allocator<int>::~allocator (&D.213807);
  D.213807 ={v} {CLOBBER};
  std::allocator<std::vector<int> >::~allocator (&D.213864);
  D.213864 ={v} {CLOBBER};
  i_100 = 0;
  goto <bb 8>; [INV]

  <bb 7> :
  _8 = (long unsigned int) i_70;
  _9 = std::vector<std::vector<int> >::operator[] (&dp, _8);
  _10 = (long unsigned int) i_70;
  _11 = std::vector<int>::operator[] (_9, _10);
  *_11 = 0;
  i_149 = i_70 + 1;

  <bb 8> :
  # i_70 = PHI <i_100(6), i_149(7)>
  _12 = std::min<int> (&a, &b);
  _13 = *_12;
  retval.2_102 = i_70 <= _13;
  if (retval.2_102 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  i_103 = 1;
  goto <bb 22>; [INV]

  <bb 10> :
  j_115 = 1;
  goto <bb 20>; [INV]

  <bb 11> :
  if (i_71 == j_72)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  // predicted unlikely by continue predictor.
  goto <bb 19>; [INV]

  <bb 13> :
  k_117 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  _14 = i_71 - k_73;
  _15 = (long unsigned int) _14;
  _16 = std::vector<std::vector<int> >::operator[] (&dp, _15);
  _17 = (long unsigned int) j_72;
  _18 = std::vector<int>::operator[] (_16, _17);
  _19 = *_18;
  _20 = _19 + 1;
  _21 = (long unsigned int) k_73;
  _22 = std::vector<std::vector<int> >::operator[] (&dp, _21);
  _23 = (long unsigned int) j_72;
  _24 = std::vector<int>::operator[] (_22, _23);
  _25 = *_24;
  _26 = _20 + _25;
  D.213872 = _26;
  _27 = (long unsigned int) i_71;
  _28 = std::vector<std::vector<int> >::operator[] (&dp, _27);
  _29 = (long unsigned int) j_72;
  _30 = std::vector<int>::operator[] (_28, _29);
  _31 = std::min<int> (_30, &D.213872);
  _32 = *_31;
  _33 = (long unsigned int) i_71;
  _34 = std::vector<std::vector<int> >::operator[] (&dp, _33);
  _35 = (long unsigned int) j_72;
  _36 = std::vector<int>::operator[] (_34, _35);
  *_36 = _32;
  D.213872 ={v} {CLOBBER};
  k_144 = k_73 + 1;

  <bb 15> :
  # k_73 = PHI <k_117(13), k_144(14)>
  if (i_71 > k_73)
    goto <bb 14>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  k_118 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  _37 = (long unsigned int) i_71;
  _38 = std::vector<std::vector<int> >::operator[] (&dp, _37);
  _39 = (long unsigned int) k_74;
  _40 = std::vector<int>::operator[] (_38, _39);
  _41 = *_40;
  _42 = _41 + 1;
  _43 = (long unsigned int) i_71;
  _44 = std::vector<std::vector<int> >::operator[] (&dp, _43);
  _45 = j_72 - k_74;
  _46 = (long unsigned int) _45;
  _47 = std::vector<int>::operator[] (_44, _46);
  _48 = *_47;
  _49 = _42 + _48;
  D.213874 = _49;
  _50 = (long unsigned int) i_71;
  _51 = std::vector<std::vector<int> >::operator[] (&dp, _50);
  _52 = (long unsigned int) j_72;
  _53 = std::vector<int>::operator[] (_51, _52);
  _54 = std::min<int> (_53, &D.213874);
  _55 = *_54;
  _56 = (long unsigned int) i_71;
  _57 = std::vector<std::vector<int> >::operator[] (&dp, _56);
  _58 = (long unsigned int) j_72;
  _59 = std::vector<int>::operator[] (_57, _58);
  *_59 = _55;
  D.213874 ={v} {CLOBBER};
  k_131 = k_74 + 1;

  <bb 18> :
  # k_74 = PHI <k_118(16), k_131(17)>
  if (j_72 > k_74)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 19> :
  j_145 = j_72 + 1;

  <bb 20> :
  # j_72 = PHI <j_115(10), j_145(19)>
  b.3_60 = b;
  if (j_72 <= b.3_60)
    goto <bb 11>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 21> :
  i_116 = i_71 + 1;

  <bb 22> :
  # i_71 = PHI <i_103(9), i_116(21)>
  a.4_61 = a;
  if (i_71 <= a.4_61)
    goto <bb 10>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 23> :
  a.5_62 = a;
  _63 = (long unsigned int) a.5_62;
  _64 = std::vector<std::vector<int> >::operator[] (&dp, _63);
  b.6_65 = b;
  _66 = (long unsigned int) b.6_65;
  _67 = std::vector<int>::operator[] (_64, _66);
  _68 = *_67;
  _107 = std::basic_ostream<char>::operator<< (&cout, _68);

  <bb 24> :
  _69 = _107;
  std::operator<< <std::char_traits<char> > (_69, 10);

  <bb 25> :
  _109 = 0;
  std::vector<std::vector<int> >::~vector (&dp);
  a ={v} {CLOBBER};
  b ={v} {CLOBBER};
  dp ={v} {CLOBBER};
  return _109;

  <bb 26> :
<L21>:
  std::vector<int>::~vector (&D.213808);
  resx 9

  <bb 27> :
<L22>:
  D.213808 ={v} {CLOBBER};
  resx 8

  <bb 28> :
<L23>:
  resx 7

  <bb 29> :
<L24>:
  D.213805 ={v} {CLOBBER};
  resx 6

  <bb 30> :
<L25>:
  std::allocator<int>::~allocator (&D.213807);
  resx 5

  <bb 31> :
<L26>:
  D.213807 ={v} {CLOBBER};
  resx 4

  <bb 32> :
<L27>:
  std::allocator<std::vector<int> >::~allocator (&D.213864);
  resx 3

  <bb 33> :
<L28>:
  D.213864 ={v} {CLOBBER};
  resx 2

  <bb 34> :
<L29>:
  std::vector<std::vector<int> >::~vector (&dp);
  resx 22

  <bb 35> :
<L30>:
  a ={v} {CLOBBER};
  b ={v} {CLOBBER};
  dp ={v} {CLOBBER};
  resx 1

}


const int & std::min<int> (const int & __a, const int & __b)
{
  int _1;
  int _2;
  const int & _3;
  const int & _7;
  const int & _8;

  <bb 2> :
  _1 = *__b_5(D);
  _2 = *__a_6(D);
  if (_1 < _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _8 = __b_5(D);
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _7 = __a_6(D);

  <bb 5> :
  # _3 = PHI <_8(3), _7(4)>
  return _3;

}


const long unsigned int & std::min<long unsigned int> (const long unsigned int & __a, const long unsigned int & __b)
{
  long unsigned int _1;
  long unsigned int _2;
  const long unsigned int & _3;
  const long unsigned int & _7;
  const long unsigned int & _8;

  <bb 2> :
  _1 = *__b_5(D);
  _2 = *__a_6(D);
  if (_1 < _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _8 = __b_5(D);
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _7 = __a_6(D);

  <bb 5> :
  # _3 = PHI <_8(3), _7(4)>
  return _3;

}


void operator delete (void * D.25495, void * D.25496)
{
  <bb 2> :
  return;

}


__attribute__((nodiscard))
void * operator new (size_t D.25487, void * __p)
{
  void * _2;

  <bb 2> :
  _2 = __p_1(D);
  return _2;

}


long unsigned int std::__size_to_integer (long unsigned int __n)
{
  long unsigned int _2;

  <bb 2> :
  _2 = __n_1(D);
  return _2;

}


